

// Include the bags libraries (lists is included with this).
#include "library-bags.fz"

/*
A database row is a list of clipped nums.  The 0-indexed value is 
the label, and the parameters are indexed 1 through k.
*/


typedef nlist = list(num);
typedef clist = list(clipped);
typedef db = (clipped, clist) bag;


/* This set of data comes from https://kdd.ics.uci.edu/databases/coil/coil.html.
 * The first 11 pieces of data per row are the parameters.  The last 7 are 
 * different values of y.  The original idea of the data set is to treat those 
 * 7 values as a tuple that is taken together, but for the purposes of simplifying 
 * this work, the below db will just choose one of them.  Change this choice by 
 * changing the argument to index from 11 to 17 (inclusive).
 * 
 * Also, all values are divided by 300, but since some of the original values are 
 * above 300 (in fact, some of them go up to the thousands), everything above 
 * 300 is clipped.
 * 
 * Lastly, the first 3 parameters were originally "season", "river size" and 
 * "fluid velocity", but I manually converted these to numbers between 0 and 
 * 300 so that all the parameters would be numbers.  The conversion is as follows:
 *   season: winter=0, spring=100, summer=200, autumn=300
 *   rivier size: small=0, medium=150, large=300
 *   fluid velocity: low=0, medium=150, high=300
 */
db = (db = listbagFromFile@[num] "examples/data/coil-analysis.dat" ",";
      db = bagmap@[nlist]@[clist]
            (fun (l : nlist) : clist {
              list_map@[num]@[clipped] (fun (x : num) : clipped { clip (x / 300.0) }) l}) db;
      db = bagmap@[clist]@[(clipped,clist)]
            (fun (l : clist) : (clipped,clist) {
              (index@[clipped] (clip 0) 11 l, take@[clipped] 11 l) }) db;
      db);


// WHITE ZONE
loadDB@[db] db 500;
dbSize = bagsize@[(clipped,clist)] db;

showBag (bagmap@[(clipped,clist)]@[string]
    (fun (tup : (clipped,clist)) : string {
        showPair@[clipped]@[clist] showClipped (showList@[clipped] showClipped) tup }) db)


